# Set global configurations and settings here
knitr::opts_chunk$set()                 # set global chunk options
ggplot2::theme_set(ggplot2::theme_bw()) # set ggplot2 theme
library(tidyverse)    # functions for data manipulation
library(ggplot2)
library(MASS)
library(dplyr)
library(GGally)
library(kableExtra)
library(DT)
# import data
bikes <- read.csv('bikes_hour.csv')
datatable(bikes)
#data type of variables
str(bikes)
# check NAs
colSums(is.na(bikes))
# check zeros
colSums(bikes == 0, na.rm = TRUE)
# correlation between numeric variables
num_corr_tb<- bikes %>%
#include dplyr::, otherwise dplyr would clash with MASS package
dplyr::select(-season, -dteday, -instant, -holiday, -weekday,
-workingday, -registered)
#num_corr_tb
datatable(cor(num_corr_tb))
# fit the GAM model for linear regression
gam_lin = gam( count ~ s(temperature) + s(windspeed) +
workingday + season,
data = bikes )
library(gam)
#library(mgcv)
# fit the GAM model for linear regression
gam_lin = gam( count ~ s(temperature) + s(windspeed) +
workingday + season,
data = bikes )
summary(gam_lin)
par( mfrow = c(1,4) )
plot( gam_lin,  se = TRUE, col = "blue" )
# convert Gender to factor
bikes1 = bikes
bikes1$workingday = factor(bikes1$workingday)
bikes1$season = factor(bikes1$season)
# fit the GAM model for linear regression with updated Gender(factorized)
gam1_lin = gam( count ~ s(temperature) + s(windspeed) +
workingday + season,
data = bikes1 )
summary(gam1_lin)
par( mfrow = c(1,4) )
plot( gam1_lin,  se = TRUE, col = "blue" )
preds_gam_lin <- predict( gam1_lin,
newdata = data.frame( temperature = 0.40, windspeed = 0.5,
workingday = '1', season = '3' )  )
preds_gam_lin
library(gam)
# linear fit
linear_mod = gam( count ~ temperature + windspeed +
workingday + season,
data = bikes1 )
summary(linear_mod)
preds_lin <- predict( linear_mod,
newdata = data.frame( temperature = 0.40, windspeed = 0.5,
workingday = '1', season = '3' )   )
preds_lin
AIC(linear_mod)
AIC(gam1_lin)
anova(linear_mod, gam1_lin, test="Chisq")
## convert Gender and Subscription.Status to factor
bikes2 = bikes
bikes2$workingday = factor(bikes2$workingday)
bikes2$season = factor(bikes2$season)
# fit the GAM model for logistic regression
gam_log = gam( workingday ~ s(temperature) + s(windspeed) +
s(count) + season,
data = bikes2 , family = binomial)
summary(gam_log)
par( mfrow = c(1,4) )
plot( gam_log,  se = TRUE, col = "blue" )
# prediction with GAM smoothing terms for logistic regression
preds_gam_log <- predict( gam_log,
newdata = data.frame( temperature = 0.40, windspeed = 0.5,
count = 70, season = '3'  )  )
preds_gam_log
# logistic fit
log_mod = gam( workingday ~ temperature + windspeed +
count + season,
data = bikes2 , family = binomial )
summary(log_mod)
# prediction with logistic fit
preds_log <- predict( log_mod,
newdata = data.frame( temperature = 0.40, windspeed = 0.5,
count = 70, season = '3'  )  )
preds_log
AIC(log_mod)
AIC(gam_log)
anova(log_mod, gam_log, test="Chisq")
